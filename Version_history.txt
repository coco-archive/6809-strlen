6809-strlen Version_history.txt
(c) 2017 by Richard Cavell

Version 1.2 (1 November 2017)

  * The routine now comes in two versions:

      * strlen.s
      * no_error_strlen.s

      * strlen.s now identifies the "no end" error, which occurs when the
        string is read up to memory location $FFFF without finding a
        terminating zero
      * no_error_strlen.s is for when you are sure that this error
        will not be encountered

      * Both versions are, and will be, actively maintained
      * The test suite now tests both versions
      * The object code assembles with asm6809 into:

          * strlen.bin - 15 bytes
          * no_error_strlen.bin - 21 bytes

  * The code has been improved

      * Slight savings in speed have been achieved
      * The CODE pseudo-op is used at the start of the code
      * All symbols that might be useful are now exported
      * The object code length is calculated and exported
      * We now use 4-space indents

  * The test suite has been improved

      * We now use the decb utility from the Toolshed
        (https://sourceforge.net/projects/toolshed/) to automatically
        build the test suite disk, making things much easier
      * The test suite now builds its own versions of strlen.bin and
        no_error_strlen.bin, as DECB executable files rather than raw binaries
      * You can now build the test suite and run XRoar or MAME from a single
        Make command
      * helper1.bin now takes a parameter, for which routine you want to use
      * And more!

  * Removal of certain files in the "Test suite" folder:

      * Machines.txt
      * Technical_info.txt

      Their contents are now incorporated into the test suite
      Readme.txt

Version 1.1 (24 August 2017)

  * Slight improvements to strlen.s

      * Add label _strlen_entry, which identifies the entry point
      * Slight modification to the code, for maximum portability
        to other assemblers
          * PULS X, PC -> PULS X,PC  (removal of space)
      * Removal of the ORG command, for maximum portability to other
        projects
      * To assemble a standalone routine or to incorporate it into the
        test suite, you should now use main.s, which includes the ORG
        command and what remains of strlen.s
      * And more!

  * Improved code comments and Readme.txt

      The following things are now explicitly documented:

      * The routine is position-independent and re-entrant
      * Interrupts are allowed to occur during execution
      * 2 extra bytes of the S stack are being used
      * What a C-style string is

  * Creation of new files

      * Machines.txt         (in the Test Suite folder)
      * Version_history.txt  (in the main folder)

  * Many significant improvements to the test suite

      * TEST.BAS now calls the machine language routines using USRx()
        instead of EXEC, so parameters are handled more neatly
      * Memory map has been greatly simplified
      * helper1.s and helper2.s now use the DECB (Disk Extended Color BASIC)
        calling conventions
      * helper2.s now constructs the test string 2 bytes at a time, so
        it is faster. It will still correctly handle odd lengths
      * Both assembly files have been modified for maximum portability
        to other assemblers
          * Characters are now presented as 'A rather than 'A'
          * Strings are now presented as 'A * 256 + 'B  rather than "AB"
      * All magic numbers are now presented as symbols
      * And more!

  * We are now supporting only two platforms for the test suite

      * Machines.txt identifies those targets. Both are emulated machines:

          * xroar coco2b, and
          * mame coco2b

      * The ability of TEST.BAS to work from tape has been removed

Version 1.0 (28 July 2017)

    * Initial stable release of 6809-strlen
